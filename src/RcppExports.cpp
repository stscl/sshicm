// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppThread.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// RcppINSSH
double RcppINSSH(Rcpp::IntegerVector d, Rcpp::IntegerVector s);
RcppExport SEXP _sshicm_RcppINSSH(SEXP dSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppINSSH(d, s));
    return rcpp_result_gen;
END_RCPP
}
// RcppINSSHICM
Rcpp::NumericVector RcppINSSHICM(Rcpp::IntegerVector d, Rcpp::IntegerVector s, unsigned int seed, int permutation_number);
RcppExport SEXP _sshicm_RcppINSSHICM(SEXP dSEXP, SEXP sSEXP, SEXP seedSEXP, SEXP permutation_numberSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type permutation_number(permutation_numberSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppINSSHICM(d, s, seed, permutation_number));
    return rcpp_result_gen;
END_RCPP
}
// RcppICSSH
double RcppICSSH(Rcpp::NumericVector d, Rcpp::IntegerVector s, std::string bin_method);
RcppExport SEXP _sshicm_RcppICSSH(SEXP dSEXP, SEXP sSEXP, SEXP bin_methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< std::string >::type bin_method(bin_methodSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppICSSH(d, s, bin_method));
    return rcpp_result_gen;
END_RCPP
}
// RcppICSSHICM
Rcpp::NumericVector RcppICSSHICM(Rcpp::NumericVector d, Rcpp::IntegerVector s, unsigned int seed, int permutation_number, std::string bin_method);
RcppExport SEXP _sshicm_RcppICSSHICM(SEXP dSEXP, SEXP sSEXP, SEXP seedSEXP, SEXP permutation_numberSEXP, SEXP bin_methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type permutation_number(permutation_numberSEXP);
    Rcpp::traits::input_parameter< std::string >::type bin_method(bin_methodSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppICSSHICM(d, s, seed, permutation_number, bin_method));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sshicm_RcppINSSH", (DL_FUNC) &_sshicm_RcppINSSH, 2},
    {"_sshicm_RcppINSSHICM", (DL_FUNC) &_sshicm_RcppINSSHICM, 4},
    {"_sshicm_RcppICSSH", (DL_FUNC) &_sshicm_RcppICSSH, 3},
    {"_sshicm_RcppICSSHICM", (DL_FUNC) &_sshicm_RcppICSSHICM, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_sshicm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
